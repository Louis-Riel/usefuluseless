#ifndef __btc_h
#define __btc_h

#include "esp_bt.h"
#include "esp_gap_bt_api.h"
#include <esp_spp_api.h>
#include "esp_system.h"
#include "freertos/FreeRTOS.h"
#include "freertos/event_groups.h"

typedef
	struct {
		esp_bd_addr_t       baddr;
		char                name[24];
                uint32_t            rssi;
                uint32_t            cod;
                uint64_t            createTs;
                uint64_t            lastTs;
                uint64_t            totTs;
                uint8_t             goneCnt;
                char                bootId;
                bool                present;
                }
bt_device;

typedef
	struct {
        uint32_t            workPeriod;
        uint32_t            scanPeriod;
        EventGroupHandle_t  s_bt_eg;
        EventGroupHandle_t  s_wifi_eg;
	}
bt_config;
static const uint8_t apoui[][3] = {  {0x00,0x11,0x24},
                {0x00,0x14,0x51},
                {0x00,0x22,0x41},
                {0x00,0x11,0x24},
                {0x00,0x14,0x51},
                {0x00,0x22,0x41},
                {0x00,0x23,0x12},
                {0x00,0x23,0x32},
                {0x00,0x24,0x36},
                {0x00,0x25,0x00},
                {0x00,0x26,0x08},
                {0x00,0x30,0x65},
                {0x00,0x61,0x71},
                {0x00,0x88,0x65},
                {0x04,0x15,0x52},
                {0x04,0x26,0x65},
                {0x04,0x54,0x53},
                {0x04,0x72,0x95},
                {0x08,0x00,0x07},
                {0x08,0x66,0x98},
                {0x08,0x70,0x45},
                {0x08,0x74,0x02},
                {0x10,0x29,0x59},
                {0x10,0x30,0x25},
                {0x18,0x20,0x32},
                {0x18,0x34,0x51},
                {0x18,0x65,0x90},
                {0x28,0x37,0x37},
                {0x30,0x57,0x14},
                {0x30,0x90,0x48},
                {0x34,0x12,0x98},
                {0x34,0x42,0x62},
                {0x40,0x26,0x19},
                {0x40,0x30,0x04},
                {0x44,0x00,0x10},
                {0x50,0x32,0x37},
                {0x54,0x26,0x96},
                {0x54,0x99,0x63},
                {0x60,0x03,0x08},
                {0x60,0x69,0x44},
                {0x60,0x83,0x73},
                {0x60,0x92,0x17},
                {0x64,0x70,0x33},
                {0x68,0x09,0x27},
                {0x70,0x11,0x24},
                {0x70,0x56,0x81},
                {0x74,0x81,0x14},
                {0x80,0x49,0x71},
                {0x80,0x82,0x23},
                {0x84,0x29,0x99},
                {0x84,0x38,0x35},
                {0x84,0x41,0x67},
                {0x84,0x68,0x78},
                {0x84,0x85,0x06},
                {0x88,0x19,0x08},
                {0x88,0x53,0x95},
                {0x88,0x64,0x40},
                {0x90,0x72,0x40},
                {0x94,0x16,0x25},
                {0x94,0x94,0x26}};

#define BT_UP_BIT BIT0
#define BT_SCAN_READY_BIT BIT1
#define BT_SCANING_BIT BIT4
#define BLE_UP_BIT BIT2
void btSallyForth(void *pvParameter);
void btScan(void *pvParameter);

uint32_t btToJSON(char* buf);
extern void stopBt();

#endif